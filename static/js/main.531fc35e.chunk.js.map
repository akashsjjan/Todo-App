{"version":3,"sources":["all.js","completed.js","incompleted.js","comp1.js","App.js","reportWebVitals.js","index.js"],"names":["all","props","completedStyle","fontStyle","color","textDecoration","listItems","items","map","item","className","id","type","checked","comp","onChange","checkBoxChange","key","style","text","aria-label","onClick","deleteItem","aria-hidden","completed","incompleted","comp1","state","currentItem","count","handleInput","bind","addItem","countt","this","setState","e","target","value","Date","now","preventDefault","newItem","Items","console","log","prevState","filterItems","filter","interval","setInterval","counts","onSubmit","placeholder","data-toggle","href","length","Component","App","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAyCeA,MAvCf,SAAaC,GACX,IAAMC,EAAiB,CACrBC,UAAW,SACXC,MAAO,UACPC,eAAgB,gBAIZC,EADQL,EAAMM,MACIC,KAAI,SAACC,GAC3B,OACE,sBACEC,UAAU,wBADZ,UAGE,qBAAKC,GAAG,WAAR,SACE,uBACEC,KAAK,WACLC,QAASJ,EAAKK,KACdC,SAAU,kBAAMd,EAAMe,eAAeP,EAAKQ,UAG9C,qBAAKN,GAAG,WAA0BO,MAAOT,EAAKK,KAAOZ,EAAiB,KAAtE,SACGO,EAAKU,MADgBV,EAAKQ,KAG7B,qBAAKN,GAAG,cAAR,SACE,wBACED,UAAU,QACVE,KAAK,SACLQ,aAAW,QACXC,QAAS,kBAAMpB,EAAMqB,WAAWb,EAAKQ,MAJvC,SAME,sBAAMM,cAAY,OAAlB,4BAMV,OAAO,qBAAKb,UAAU,WAAf,SAA2BJ,KCQrBkB,MA5Cf,SAAmBvB,GACjB,IAAMC,EAAiB,CACrBC,UAAW,SACXC,MAAO,UACPC,eAAgB,gBAIZC,EADQL,EAAMM,MACIC,KAAI,SAACC,GAC3B,GAAiB,GAAbA,EAAKK,KACP,OACE,sBAAKJ,UAAU,wBAAf,UACE,qBAAKC,GAAG,WAAR,SACE,uBACEC,KAAK,WACLC,QAASJ,EAAKK,KACdC,SAAU,kBAAMd,EAAMe,eAAeP,EAAKQ,UAI9C,qBACEN,GAAG,WAEHO,MAAOT,EAAKK,KAAOZ,EAAiB,KAHtC,SAKGO,EAAKU,MAHDV,EAAKQ,KAKZ,qBAAKN,GAAG,cAAR,SACE,wBACED,UAAU,QACVE,KAAK,SACLQ,aAAW,QACXC,QAAS,kBAAMpB,EAAMqB,WAAWb,EAAKQ,MAJvC,SAME,sBAAMM,cAAY,OAAlB,4BAOZ,OAAO,qBAAKb,UAAU,WAAf,SAA2BJ,KCErBmB,MA3Cf,SAAqBxB,GACnB,IAAMC,EAAiB,CACrBC,UAAW,SACXC,MAAO,UACPC,eAAgB,gBAIZC,EADQL,EAAMM,MACIC,KAAI,SAACC,GAC3B,GAAiB,GAAbA,EAAKK,KACP,OACE,sBACAJ,UAAU,wBADV,UAGA,qBAAKC,GAAG,WAAR,SACE,uBACEC,KAAK,WACLC,QAASJ,EAAKK,KACdC,SAAU,kBAAMd,EAAMe,eAAeP,EAAKQ,UAI9C,qBAAKN,GAAG,WACNO,MAAOT,EAAKK,KAAOZ,EAAiB,KADtC,SAEGO,EAAKU,MAFgBV,EAAKQ,KAI7B,qBAAKN,GAAG,cAAR,SACE,wBACED,UAAU,QACVE,KAAK,SACLQ,aAAW,QACXC,QAAS,kBAAMpB,EAAMqB,WAAWb,EAAKQ,MAJvC,SAME,sBAAMM,cAAY,OAAlB,4BAOV,OAAO,qBAAKb,UAAU,WAAf,SAA2BJ,KCmJrBoB,EAxLf,kDACE,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACD0B,MAAQ,CACXpB,MAAO,CACL,CACEY,KAAM,SACNF,IAAK,IACLH,MAAM,GAER,CACEK,KAAM,SACNF,IAAK,IACLH,MAAM,IAGVc,YAAa,CACXT,KAAM,GACNF,IAAK,GACLH,MAAM,GAERe,MAAO,GAET,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKf,eAAiB,EAAKA,eAAee,KAApB,gBACtB,EAAKT,WAAa,EAAKA,WAAWS,KAAhB,gBAzBD,EADrB,0CA6BE,WACE,IAAIE,EAAS,EAEQC,KAAKP,MAAMpB,MAAMC,KAAI,SAACC,IACvB,IAAdA,EAAKK,OACPmB,GAAkB,MAItB,OAAOC,KAAKC,SAAS,CAAEN,MAAOI,MAtClC,yBAyCE,SAAYG,GACVF,KAAKC,SAAS,CACZP,YAAa,CACXT,KAAMiB,EAAEC,OAAOC,MACfrB,IAAKsB,KAAKC,MACV1B,MAAM,OA9Cd,qBAmDE,SAAQsB,GACNA,EAAEK,iBACF,IAAMC,EAAUR,KAAKP,MAAMC,YAC3B,GAAqB,KAAjBc,EAAQvB,KAAa,CACvB,IAAMwB,EAAK,sBAAOT,KAAKP,MAAMpB,OAAlB,CAAyBmC,IACpCR,KAAKC,SACH,CACE5B,MAAOoC,EACPf,YAAa,CACXT,KAAM,GACNF,IAAK,GACLH,MAAM,KAGV,WACE8B,QAAQC,IAAIF,SAlEtB,4BAwEE,SAAe1B,GACbiB,KAAKC,UACH,SAACW,GAUC,MAAO,CACLvC,MAVmBuC,EAAUvC,MAAMC,KAAI,SAACC,GACxC,OAAIA,EAAKQ,MAAQA,EACR,2BACFR,GADL,IAEEK,MAAOL,EAAKK,OAGTL,WAlFjB,wBA6FE,SAAWQ,GACT,IAAM8B,EAAcb,KAAKP,MAAMpB,MAAMyC,QAAO,SAACvC,GAAD,OAAUA,EAAKQ,MAAQA,KACnEiB,KAAKC,SACH,CACE5B,MAAOwC,MAjGf,+BAwGE,WAAqB,IAAD,OAClBb,KAAKe,SAAWC,aAAY,kBAAM,EAAKC,WAAU,OAzGrD,oBA+GE,WAIE,OACE,sBAAKzC,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,sBAAMC,GAAG,aAAayC,SAAUlB,KAAKF,QAArC,SACE,sBAAKtB,UAAU,cAAf,UACE,uBACEA,UAAU,eACVE,KAAK,OACLyC,YAAY,iBACZf,MAAOJ,KAAKP,MAAMC,YAAYT,KAC9BJ,SAAUmB,KAAKJ,cAEjB,qBAAKpB,UAAU,kBAAf,SACE,yBAAQA,UAAU,eAAeE,KAAK,SAAtC,UACG,IADH,MAEM,gBAMd,sBAAKF,UAAU,oBAAf,UACE,qBAAIA,UAAU,mCAAd,UACE,oBAAIA,UAAU,SAAd,SACE,oBAAG4C,cAAY,OAAOC,KAAK,OAA3B,iBACM,sBAAM7C,UAAU,oBAAhB,SAAqCwB,KAAKP,MAAMpB,MAAMiD,cAG9D,6BACE,oBAAGF,cAAY,OAAOC,KAAK,aAA3B,uBACY,sBAAM7C,UAAU,oBAAhB,SAAqCwB,KAAKP,MAAME,aAG9D,6BACE,oBAAGyB,cAAY,OAAOC,KAAK,eAA3B,yBACc,sBAAM7C,UAAU,oBAAhB,SAAqCwB,KAAKP,MAAMpB,MAAMiD,OAAStB,KAAKP,MAAME,gBAK5F,sBAAKnB,UAAU,cAAf,UACE,qBAAKC,GAAG,MAAMD,UAAU,0BAAxB,SACE,cAAC,EAAD,CACEH,MAAO2B,KAAKP,MAAMpB,MAClBS,eAAgBkB,KAAKlB,eACrBM,WAAYY,KAAKZ,eAGrB,qBAAKX,GAAG,YAAYD,UAAU,gBAA9B,SACA,cAAC,EAAD,CACIH,MAAO2B,KAAKP,MAAMpB,MAClBS,eAAgBkB,KAAKlB,eACrBM,WAAYY,KAAKZ,eAGrB,qBAAKX,GAAG,cAAcD,UAAU,gBAAhC,SACA,cAAC,EAAD,CACIH,MAAO2B,KAAKP,MAAMpB,MAClBS,eAAgBkB,KAAKlB,eACrBM,WAAYY,KAAKZ,4BA9KjC,GAA2BmC,aCYZC,E,4JAZb,WACE,OACE,qBAAKhD,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUiD,IAAMF,WCQTG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.531fc35e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction all(props) {\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#696969\",\n    textDecoration: \"line-through\",\n  };\n\n  const items = props.items;\n  const listItems = items.map((item) => {\n    return (\n      <div\n        className=\"wells container-fluid\"\n      >\n        <div id=\"checkBox\">\n          <input\n            type=\"checkbox\"\n            checked={item.comp}\n            onChange={() => props.checkBoxChange(item.key)}\n          />\n        </div>\n        <div id=\"todoItem\" key={item.key} style={item.comp ? completedStyle : null}>\n          {item.text}\n        </div>\n        <div id=\"closeButton\">\n          <button\n            className=\"close\"\n            type=\"button\"\n            aria-label=\"Close\"\n            onClick={() => props.deleteItem(item.key)}\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n      </div>\n    );\n  });\n  return <div className=\"contectx\">{listItems}</div>;\n}\n\nexport default all;\n","import React from \"react\";\n\nfunction completed(props) {\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#696969\",\n    textDecoration: \"line-through\",\n  };\n\n  const items = props.items;\n  const listItems = items.map((item) => {\n    if (item.comp == true) {\n      return (\n        <div className=\"wells container-fluid\">\n          <div id=\"checkBox\">\n            <input\n              type=\"checkbox\"\n              checked={item.comp}\n              onChange={() => props.checkBoxChange(item.key)}\n            />\n          </div>\n\n          <div\n            id=\"todoItem\"\n            key={item.key}\n            style={item.comp ? completedStyle : null}\n          >\n            {item.text}\n          </div>\n          <div id=\"closeButton\">\n            <button\n              className=\"close\"\n              type=\"button\"\n              aria-label=\"Close\"\n              onClick={() => props.deleteItem(item.key)}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        </div>\n      );\n    }\n  });\n  return <div className=\"contectx\">{listItems}</div>;\n}\n\nexport default completed;\n","import React from \"react\";\n\nfunction incompleted(props) {\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#cdcdcd\",\n    textDecoration: \"line-through\",\n  };\n\n  const items = props.items;\n  const listItems = items.map((item) => {\n    if (item.comp == false) {\n      return (\n        <div\n        className=\"wells container-fluid\"\n      >\n        <div id=\"checkBox\">\n          <input\n            type=\"checkbox\"\n            checked={item.comp}\n            onChange={() => props.checkBoxChange(item.key)}\n          />\n        </div>\n\n        <div id=\"todoItem\" key={item.key}\n          style={item.comp ? completedStyle : null}>\n          {item.text}\n        </div>\n        <div id=\"closeButton\">\n          <button\n            className=\"close\"\n            type=\"button\"\n            aria-label=\"Close\"\n            onClick={() => props.deleteItem(item.key)}\n          >\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n      </div>\n      );\n    }\n  });\n  return <div className=\"contectx\">{listItems}</div>;\n}\n\nexport default incompleted;\n","import React, { Component } from \"react\";\nimport All from \"./all\";\nimport Completed from \"./completed\"\nimport Incompleted from \"./incompleted\"\n\nexport class comp1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [\n        {\n          text: \"Task 1\",\n          key: \"1\",\n          comp: false,\n        },\n        {\n          text: \"Task 2\",\n          key: \"2\",\n          comp: true,\n        },\n      ],\n      currentItem: {\n        text: \"\",\n        key: \"\",\n        comp: false,\n      },\n      count: 0,\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.checkBoxChange = this.checkBoxChange.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  counts() {\n    let countt = 0;\n\n    const updatedCount = this.state.items.map((item) => {\n      if (item.comp === true) {\n        countt = countt + 1;\n      }\n      // console.log(countt);\n    });\n    return this.setState({ count: countt });\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now(),\n        comp: false,\n      },\n    });\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    if (newItem.text !== \"\") {\n      const Items = [...this.state.items, newItem];\n      this.setState(\n        {\n          items: Items,\n          currentItem: {\n            text: \"\",\n            key: \"\",\n            comp: false,\n          },\n        },\n        () => {\n          console.log(Items);\n        }\n      );\n    }\n  }\n\n  checkBoxChange(key) {\n    this.setState(\n      (prevState) => {\n        const updatedItems = prevState.items.map((item) => {\n          if (item.key === key) {\n            return {\n              ...item,\n              comp: !item.comp,\n            };\n          }\n          return item;\n        });\n        return {\n          items: updatedItems,\n        };\n      } /*() => {\n      this.counts();\n    }*/\n    );\n  }\n\n  deleteItem(key) {\n    const filterItems = this.state.items.filter((item) => item.key !== key);\n    this.setState(\n      {\n        items: filterItems,\n      } /*() => {\n      this.counts();\n    }*/\n    );\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.counts(), 100);\n  }\n  // componentWillUnmount() {\n  //   clearInterval(this.interval);\n  // }\n\n  render() {\n    const a = 0;\n    const b = 1;\n    const c = 2;\n    return (\n      <div className=\"container\">\n        <div className=\"head text-center\">\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <div className=\"input-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Enter the Task\"\n                value={this.state.currentItem.text}\n                onChange={this.handleInput}\n              />\n              <div className=\"input-group-btn\">\n                <button className=\"btn btn-info\" type=\"submit\">\n                  {\" \"}\n                  Add{\" \"}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div className=\"container content\">\n          <ul className=\"tabs nav nav-pills nav-justified\">\n            <li className=\"active\">\n              <a data-toggle=\"pill\" href=\"#all\">\n                All <span className=\"badge badge-light\">{this.state.items.length}</span>\n              </a>\n            </li>\n            <li>\n              <a data-toggle=\"pill\" href=\"#completed\">\n                Completed <span className=\"badge badge-light\">{this.state.count}</span>\n              </a>\n            </li>\n            <li>\n              <a data-toggle=\"pill\" href=\"#incompleted\">\n                Incompleted <span className=\"badge badge-light\">{this.state.items.length - this.state.count}</span>\n              </a>\n            </li>\n          </ul>\n\n          <div className=\"tab-content\">\n            <div id=\"all\" className=\"tab-pane fade in active\">\n              <All\n                items={this.state.items}\n                checkBoxChange={this.checkBoxChange}\n                deleteItem={this.deleteItem}\n              />\n            </div>\n            <div id=\"completed\" className=\"tab-pane fade\">\n            <Completed\n                items={this.state.items}\n                checkBoxChange={this.checkBoxChange}\n                deleteItem={this.deleteItem}\n              />\n            </div>\n            <div id=\"incompleted\" className=\"tab-pane fade\">\n            <Incompleted\n                items={this.state.items}\n                checkBoxChange={this.checkBoxChange}\n                deleteItem={this.deleteItem}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default comp1;\n","import React from 'react'\nimport './App.css';\nimport Comp1 from './comp1'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\"> \n        <Comp1 />\n      </div>\n      \n    );\n\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}